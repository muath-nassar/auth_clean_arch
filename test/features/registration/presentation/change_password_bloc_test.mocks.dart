// Mocks generated by Mockito 5.4.4 from annotations
// in auth_clean_arch/test/features/registration/presentation/change_password_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:auth_clean_arch/core/errors/failures.dart' as _i6;
import 'package:auth_clean_arch/core/services/email_service.dart' as _i4;
import 'package:auth_clean_arch/core/usecases/usecase.dart' as _i10;
import 'package:auth_clean_arch/core/utils/validators/email_validator.dart'
    as _i5;
import 'package:auth_clean_arch/core/utils/validators/password_validator.dart'
    as _i7;
import 'package:auth_clean_arch/features/registration/domain/repositories/user_repository.dart'
    as _i3;
import 'package:auth_clean_arch/features/registration/domain/use_cases/forget_password_use_case.dart'
    as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserRepository_1 extends _i1.SmartFake
    implements _i3.UserRepository {
  _FakeUserRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeForgetPasswordEmailService_2 extends _i1.SmartFake
    implements _i4.ForgetPasswordEmailService {
  _FakeForgetPasswordEmailService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EmailValidator].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmailValidator extends _i1.Mock implements _i5.EmailValidator {
  MockEmailValidator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i6.Failure, String> validate(String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #validate,
          [value],
        ),
        returnValue: _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #validate,
            [value],
          ),
        ),
      ) as _i2.Either<_i6.Failure, String>);
}

/// A class which mocks [PasswordValidator].
///
/// See the documentation for Mockito's code generation for more information.
class MockPasswordValidator extends _i1.Mock implements _i7.PasswordValidator {
  MockPasswordValidator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i6.Failure, String> validate(String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #validate,
          [value],
        ),
        returnValue: _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #validate,
            [value],
          ),
        ),
      ) as _i2.Either<_i6.Failure, String>);
}

/// A class which mocks [ForgetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgetPasswordUseCase extends _i1.Mock
    implements _i8.ForgetPasswordUseCase {
  MockForgetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set verificationCode(String? _verificationCode) => super.noSuchMethod(
        Invocation.setter(
          #verificationCode,
          _verificationCode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set sentTime(DateTime? _sentTime) => super.noSuchMethod(
        Invocation.setter(
          #sentTime,
          _sentTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.UserRepository);

  @override
  set repository(_i3.UserRepository? _repository) => super.noSuchMethod(
        Invocation.setter(
          #repository,
          _repository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.ForgetPasswordEmailService get forgetPasswordEmailService =>
      (super.noSuchMethod(
        Invocation.getter(#forgetPasswordEmailService),
        returnValue: _FakeForgetPasswordEmailService_2(
          this,
          Invocation.getter(#forgetPasswordEmailService),
        ),
      ) as _i4.ForgetPasswordEmailService);

  @override
  set forgetPasswordEmailService(
          _i4.ForgetPasswordEmailService? _forgetPasswordEmailService) =>
      super.noSuchMethod(
        Invocation.setter(
          #forgetPasswordEmailService,
          _forgetPasswordEmailService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set emailToVerify(String? _emailToVerify) => super.noSuchMethod(
        Invocation.setter(
          #emailToVerify,
          _emailToVerify,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i2.Either<_i6.Failure, String>> call(_i10.EmailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i9.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i6.Failure, String>>);

  @override
  _i9.Future<_i2.Either<_i6.Failure, String>> sendEmail(
          _i10.EmailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmail,
          [params],
        ),
        returnValue: _i9.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #sendEmail,
            [params],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i6.Failure, String>>);

  @override
  bool verifyInputCode(String? inputCode) => (super.noSuchMethod(
        Invocation.method(
          #verifyInputCode,
          [inputCode],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<_i2.Either<_i6.Failure, String>> updatePassword(
    String? inputCode,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [
            inputCode,
            newPassword,
          ],
        ),
        returnValue: _i9.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #updatePassword,
            [
              inputCode,
              newPassword,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i6.Failure, String>>);
}
