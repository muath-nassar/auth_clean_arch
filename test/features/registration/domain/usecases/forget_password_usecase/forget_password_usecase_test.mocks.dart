// Mocks generated by Mockito 5.4.4 from annotations
// in auth_clean_arch/test/features/registration/domain/usecases/forget_password_usecase/forget_password_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:auth_clean_arch/core/errors/failures.dart' as _i6;
import 'package:auth_clean_arch/core/services/email_service.dart' as _i4;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mailer/smtp_server.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSmtpServer_0 extends _i1.SmartFake implements _i2.SmtpServer {
  _FakeSmtpServer_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ForgetPasswordEmailService].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgetPasswordEmailService extends _i1.Mock
    implements _i4.ForgetPasswordEmailService {
  MockForgetPasswordEmailService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);

  @override
  _i2.SmtpServer get smtpServer => (super.noSuchMethod(
        Invocation.getter(#smtpServer),
        returnValue: _FakeSmtpServer_0(
          this,
          Invocation.getter(#smtpServer),
        ),
      ) as _i2.SmtpServer);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> call(
          _i4.VerificationMailParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
